---
import Icon from '@components/Icon.astro';

export interface Props {
  text?: string;
  icon?: string;
  href?: string;
  id?: string;
  style: 'filled' | 'ghost-outlined' | 'filled-disabled';
  order: 'text-icon' | 'icon-text';
}

const { text, icon, style: type, order, href, id } = Astro.props as Props;

if (!text && !icon) {
  throw new Error('Text or icon expected, but found neither.');
}

function getButtonStyle(style: Props['style'], order: Props['order']): string {
  const commonStyles: string =
    'flex items-center justify-center gap-2 px-4 py-2 rounded-sm transition-colors';

  const orderStyles = (): string => {
    if (order == 'icon-text') {
      return 'flex-row-reverse';
    } else {
      // text-icon
      return 'flex-row';
    }
  };

  const buttonStyle = (): string => {
    if (style == 'filled') {
      return 'bg-neutral-800 hover:bg-neutral-950 text-neutral-100 fill-neutral-100';
    } else if (style == 'ghost-outlined') {
      return 'bg-none text-neutral-800 hover:bg-slate-200';
    } else {
      // filled-disabled
      return 'bg-neutral-600 cursor-not-allowed';
    }
  };

  return commonStyles + ' ' + orderStyles() + ' ' + buttonStyle();
}

const Tag: 'a' | 'button' = href ? 'a' : 'button';
---

<Tag class={getButtonStyle(type, order)} href={href} id={id}>
  <span class="font-semibold">{text}</span>
  <Icon name={icon} classes="w-5 h-5" />
</Tag>
