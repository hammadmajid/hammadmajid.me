---
import Nav from '../components/Header.astro';
import Footer from '@components/Footer.astro';
import SpeedInsights from '@vercel/speed-insights/astro';

export interface Props {
  title: string;
  description: string;
}
const { title, description } = Astro.props as Props;
---

<!DOCTYPE html>
<html lang="en" class="scroll-smooth font-IBMPlexMono">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link href="/favicon.svg" rel="icon" />
  <link rel="stylesheet" href="/base.css" />
  <link rel="sitemap" href="/sitemap-index.xml" />
  <title>{title}</title>
  <meta name="description" content={description} />
</head>
<body class="bg-light-body text-light-text-primary flex flex-col h-screen">
<header>
  <Nav />
</header>
<div id="swup" class="grow transition-fade">
  <slot />
</div>
<Footer />
</body>
</html>

<SpeedInsights />

<script>
  import Swup from 'swup';
  import SwupA11yPlugin from '@swup/a11y-plugin';
  import SwupPreloadPlugin from '@swup/preload-plugin';
  import SwupProgressPlugin from '@swup/progress-plugin';

  // @ts-ignore
  const swup: Swup = new Swup({
    plugins: [
      // WebStorm panics when using SwupProgressPlugin, but it works fine, suppressed the error
      new SwupProgressPlugin({
        delay: 0,
      }),
      new SwupA11yPlugin(),
      new SwupPreloadPlugin(),
    ],
  });

  // noinspection TypeScriptUnresolvedReference
  swup.on('contentReplaced', () => {
    document.documentElement.classList.add('is-animating');
    setTimeout(() => {
      document.documentElement.classList.remove('is-animating');
    }, 500);
  });
</script>

<style>
    .transition-fade {
        transition: 1s;
        opacity: 1;
    }

    html.is-animating .transition-fade {
        opacity: 0;
    }
</style>
